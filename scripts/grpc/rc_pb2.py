# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rc.proto',
  package='rc',
  serialized_pb=_b('\n\x08rc.proto\x12\x02rc\"F\n\tRCRequest\x12\x0f\n\x07service\x18\x01 \x02(\t\x12\x0c\n\x04\x66lag\x18\x02 \x01(\t\x12\x0c\n\x04\x61rg1\x18\x03 \x01(\t\x12\x0c\n\x04\x61rg2\x18\x04 \x01(\t\"\x1a\n\x07RCReply\x12\x0f\n\x07message\x18\x01 \x03(\t2/\n\x02RC\x12)\n\tExecuteRC\x12\r.rc.RCRequest\x1a\x0b.rc.RCReply\"\x00')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_RCREQUEST = _descriptor.Descriptor(
  name='RCRequest',
  full_name='rc.RCRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service', full_name='rc.RCRequest.service', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flag', full_name='rc.RCRequest.flag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arg1', full_name='rc.RCRequest.arg1', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arg2', full_name='rc.RCRequest.arg2', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=86,
)


_RCREPLY = _descriptor.Descriptor(
  name='RCReply',
  full_name='rc.RCReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='rc.RCReply.message', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=114,
)

DESCRIPTOR.message_types_by_name['RCRequest'] = _RCREQUEST
DESCRIPTOR.message_types_by_name['RCReply'] = _RCREPLY

RCRequest = _reflection.GeneratedProtocolMessageType('RCRequest', (_message.Message,), dict(
  DESCRIPTOR = _RCREQUEST,
  __module__ = 'rc_pb2'
  # @@protoc_insertion_point(class_scope:rc.RCRequest)
  ))
_sym_db.RegisterMessage(RCRequest)

RCReply = _reflection.GeneratedProtocolMessageType('RCReply', (_message.Message,), dict(
  DESCRIPTOR = _RCREPLY,
  __module__ = 'rc_pb2'
  # @@protoc_insertion_point(class_scope:rc.RCReply)
  ))
_sym_db.RegisterMessage(RCReply)


# @@protoc_insertion_point(module_scope)
