version: '3'
services:
  postgres:
    image: postgres:10
    ports:
      - 127.0.0.1:5432:5432
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - esnet
    restart: always

  redis:
    image: redis:5
    ports:
      - 127.0.0.1:6379:6379
    container_name: redis
    volumes:
      - /var/lib/redis:/data
    networks:
      - esnet
    restart: always

  neo4j:
    image: neo4j:3.5
    container_name: neo4j
    ports:
      - 127.0.0.1:7474:7474
      - 127.0.0.1:7687:7687
    environment:
      - NEO4J_AUTH=none
    volumes:
      - neo4jdata:/var/lib/neo4j/data
    networks:
      - esnet
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    networks:
      - esnet
    restart: always

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    container_name: elasticsearch2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.1
    container_name: kibana
    ports:
      - 127.0.0.1:5601:5601
    environment:
      SERVER_BASEPATH: /kibana
    networks:
      - esnet
    restart: always

  cerebro:
    image: lmenezes/cerebro:0.8.1
    container_name: cerebro
    ports:
      - 127.0.0.1:9000:9000
    networks:
      - esnet
    restart: always

  cyberchef:
    image: cyberchef:latest
    container_name: cyberchef
    ports:
      - 127.0.0.1:8000:8000
    networks:
      - esnet
    restart: always

  nginx:
    image: nginx:1.15
    container_name: nginx
    volumes:
      - /etc/nginx/conf.d:/etc/nginx/conf.d
      - /etc/nginx/.skadi_auth:/etc/nginx/.skadi_auth
    network_mode: "host"
    ports:
      - 80:80
      - 443:443
    restart: always

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  neo4jdata:
    driver: local
  pgdata:
    driver: local

networks:
  esnet:
